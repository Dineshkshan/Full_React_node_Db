{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dines\\\\Desktop\\\\Food Application\\\\application\\\\src\\\\htmlfiles\\\\Login.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport Avatar from 'react-avatar';\nimport '../cssfile/Login.css';\nimport avatar from '../image.png';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nconst Login = history => /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    UserName: '',\n    Password: ''\n  },\n  onSubmit: value => {\n    console.log(\"The values are\", value); // history.push('./Register')\n  },\n  validationSchema: yup.object({\n    UserName: yup.string().required('Required').min(4, 'Minimum 4 characters required').max(8, 'Maximum limit is 8 characters'),\n    Password: yup.string().required('Required').min(4, 'Minimum 4 characters required').max(8, 'Maximum limit is 8 characters')\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, ({\n  handleChange,\n  handleSubmit,\n  errors,\n  values\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"contain\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card\",\n  style: {\n    width: '20%',\n    height: '80%',\n    marginLeft: '600px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"card-title\",\n  style: {\n    textAlign: \"center\",\n    paddingTop: '80px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card-body\",\n  style: {\n    position: 'relative',\n    bottom: '100px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"avatar\",\n  style: {\n    position: 'relative',\n    bottom: '90px',\n    left: '80px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  src: avatar,\n  round: true,\n  size: \"100\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  action: \"/Register\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }\n}, \"User Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  className: errors.UserName ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"UserName\",\n  value: values.UserName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }\n}), errors.UserName ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 32\n  }\n}, \"*\", errors.UserName, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }\n}, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"password\",\n  className: errors.Password ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"Password\",\n  value: values.Password,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }\n}), errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 31\n  }\n}, \" *\", errors.Password, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  type: \"submit\",\n  className: \"btn-lg btn-block\",\n  style: {\n    marginTop: '30px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }\n}, \"Submit\"))), /*#__PURE__*/React.createElement(Link, {\n  to: \"./Register\",\n  style: {\n    marginLeft: '50px',\n    color: \"blue\",\n    textDecoration: \"underline\",\n    cursor: pointer\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }\n}, \"Don't have an account?\")))));\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/dines/Desktop/Food Application/application/src/htmlfiles/Login.js"],"names":["React","Button","Avatar","avatar","Formik","yup","Link","Login","history","UserName","Password","value","console","log","object","string","required","min","max","handleChange","handleSubmit","errors","values","width","height","marginLeft","textAlign","paddingTop","position","bottom","left","marginTop","color","textDecoration","cursor","pointer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,QAAsB,QAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AACA,MAAMC,KAAK,GAAIC,OAAD,iBACV,oBAAC,MAAD;AACA,EAAA,aAAa,EAAE;AACXC,IAAAA,QAAQ,EAAC,EADE;AAEXC,IAAAA,QAAQ,EAAC;AAFE,GADf;AAKA,EAAA,QAAQ,EAAGC,KAAD,IACV;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,KAA7B,EADJ,CAEI;AACH,GATD;AAUA,EAAA,gBAAgB,EAAEN,GAAG,CAACS,MAAJ,CACd;AACIL,IAAAA,QAAQ,EAACJ,GAAG,CAACU,MAAJ,GACLC,QADK,CACI,UADJ,EAELC,GAFK,CAED,CAFC,EAEC,+BAFD,EAGLC,GAHK,CAGD,CAHC,EAGC,+BAHD,CADb;AAKIR,IAAAA,QAAQ,EAACL,GAAG,CAACU,MAAJ,GACLC,QADK,CACI,UADJ,EAELC,GAFK,CAED,CAFC,EAEC,+BAFD,EAGLC,GAHK,CAGD,CAHC,EAGC,+BAHD;AALb,GADc,CAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAuBC,CAAC;AAACC,EAAAA,YAAD;AAAcC,EAAAA,YAAd;AAA2BC,EAAAA,MAA3B;AAAkCC,EAAAA;AAAlC,CAAD,kBACG;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAK,EAAA,SAAS,EAAC,MAAf;AAAqB,EAAA,KAAK,EAAE;AACxBC,IAAAA,KAAK,EAAC,KADkB;AAExBC,IAAAA,MAAM,EAAC,KAFiB;AAGxBC,IAAAA,UAAU,EAAC;AAHa,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKA;AAAI,EAAA,SAAS,EAAC,YAAd;AAA0B,EAAA,KAAK,EAAE;AACzBC,IAAAA,SAAS,EAAC,QADe;AAEzBC,IAAAA,UAAU,EAAC;AAFc,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALA,eASA;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,KAAK,EAAE;AAC3BC,IAAAA,QAAQ,EAAC,UADkB;AAE3BC,IAAAA,MAAM,EAAE;AAFmB,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAK,EAAA,SAAS,EAAC,QAAf;AAAwB,EAAA,KAAK,EAAE;AACvBD,IAAAA,QAAQ,EAAE,UADa;AAEvBC,IAAAA,MAAM,EAAE,MAFe;AAGvBC,IAAAA,IAAI,EAAC;AAHkB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKI,oBAAC,MAAD;AAAQ,EAAA,GAAG,EAAE3B,MAAb;AAAqB,EAAA,KAAK,EAAE,IAA5B;AAAkC,EAAA,IAAI,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CAJA,eAWA;AAAM,EAAA,QAAQ,EAAEiB,YAAhB;AAA8B,EAAA,MAAM,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AACA,EAAA,IAAI,EAAC,MADL;AAEA,EAAA,SAAS,EAAEC,MAAM,CAACZ,QAAP,GAAkB,yBAAlB,GAA4C,cAFvD;AAGA,EAAA,QAAQ,EAAEU,YAHV;AAIC,EAAA,IAAI,EAAC,UAJN;AAKC,EAAA,KAAK,EAAEG,MAAM,CAACb,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,EASCY,MAAM,CAACZ,QAAP,gBAAkB;AAAK,EAAA,SAAS,EAAC,aAAf;AAA6B,EAAA,KAAK,EAAE;AAACe,IAAAA,MAAM,EAAC;AAAR,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAsDH,MAAM,CAACZ,QAA7D,MAAlB,GAAgG,IATjG,CADJ,eAYI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA;AACA,EAAA,IAAI,EAAC,UADL;AAEA,EAAA,SAAS,EAAEY,MAAM,CAACX,QAAP,GAAkB,yBAAlB,GAA4C,cAFvD;AAGA,EAAA,QAAQ,EAAES,YAHV;AAIA,EAAA,IAAI,EAAC,UAJL;AAKA,EAAA,KAAK,EAAEG,MAAM,CAACZ,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,EASCW,MAAM,CAACX,QAAP,gBAAiB;AAAK,EAAA,SAAS,EAAC,aAAf;AAA6B,EAAA,KAAK,EAAE;AAACc,IAAAA,MAAM,EAAC;AAAR,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuDH,MAAM,CAACX,QAA9D,MAAjB,GAAgG,IATjG,CAZJ,eAuBI;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,SAAS,EAAC,kBAAhC;AAAmD,EAAA,KAAK,EAAE;AAACqB,IAAAA,SAAS,EAAE;AAAZ,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CAvBJ,CAXA,eAsCI,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAC,YAAT;AAAsB,EAAA,KAAK,EAAE;AACzBN,IAAAA,UAAU,EAAE,MADa;AAEzBO,IAAAA,KAAK,EAAC,MAFmB;AAGzBC,IAAAA,cAAc,EAAC,WAHU;AAIzBC,IAAAA,MAAM,EAAEC;AAJiB,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAtCJ,CATA,CADA,CAxBJ,CADJ;;AAsFA,eAAe5B,KAAf","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Avatar from 'react-avatar';\r\nimport '../cssfile/Login.css';\r\nimport avatar from '../image.png';\r\nimport { Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\nconst Login = (history) => (\r\n    <Formik\r\n    initialValues={{\r\n        UserName:'',\r\n        Password:''\r\n    }}\r\n    onSubmit={(value)=>\r\n    {\r\n        console.log(\"The values are\",value);\r\n        // history.push('./Register')\r\n    }}\r\n    validationSchema={yup.object(\r\n        {\r\n            UserName:yup.string()\r\n               .required('Required')\r\n               .min(4,'Minimum 4 characters required')\r\n               .max(8,'Maximum limit is 8 characters'),\r\n            Password:yup.string()\r\n               .required('Required')\r\n               .min(4,'Minimum 4 characters required')\r\n               .max(8,'Maximum limit is 8 characters')\r\n        }\r\n    )}\r\n    >\r\n    {({handleChange,handleSubmit,errors,values})=> (\r\n        <div className=\"contain\">\r\n        <div className=\"card\"style={{    \r\n            width:'20%',\r\n            height:'80%',\r\n            marginLeft:'600px'\r\n            }}>\r\n        <h5 className=\"card-title\"style={{\r\n                textAlign:\"center\",\r\n                paddingTop:'80px'\r\n        }}>Login</h5>\r\n        <div className=\"card-body\" style={{\r\n               position:'relative',\r\n               bottom: '100px'\r\n        }}>\r\n        <div className=\"avatar\" style={{\r\n                position: 'relative',\r\n                bottom: '90px',\r\n                left:'80px'\r\n        }}>\r\n            <Avatar src={avatar} round={true} size=\"100\"/>\r\n            </div>\r\n        <form onSubmit={handleSubmit} action='/Register'>\r\n            <div className='form-group'>\r\n            <label>User Name:</label>\r\n            <input \r\n            type=\"text\" \r\n            className={errors.UserName ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange}\r\n             name=\"UserName\" \r\n             value={values.UserName}\r\n             />\r\n            {errors.UserName ? <div className=\"text-danger\" style={{height:'0px'}}>*{errors.UserName}*</div>:null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>Password:</label>\r\n            <input \r\n            type=\"password\" \r\n            className={errors.Password ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange} \r\n            name=\"Password\"\r\n            value={values.Password}\r\n            />\r\n            {errors.Password ?<div className=\"text-danger\" style={{height:'0px'}}> *{errors.Password}*</div>:null}\r\n            </div>\r\n            <div className=\"button\">\r\n            <Button type=\"submit\" className=\"btn-lg btn-block\" style={{marginTop: '30px'}}>Submit</Button>\r\n            </div>\r\n            </form>\r\n            <Link to=\"./Register\" style={{    \r\n                marginLeft: '50px',\r\n                color:\"blue\",\r\n                textDecoration:\"underline\",\r\n                cursor: pointer\r\n                }}>Don't have an account?</Link>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n    }\r\n </Formik>\r\n);\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}