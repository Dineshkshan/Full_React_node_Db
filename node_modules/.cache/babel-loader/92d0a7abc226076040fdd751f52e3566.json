{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dines\\\\Desktop\\\\Food Application\\\\application\\\\src\\\\Register.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport Avatar from 'react-avatar';\nimport './Register.css';\nimport avatar from './image.png';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nconst phone = /\"[7-9]{1}[0-9]{4}[0-9]{5}\"/;\n\nconst Login = () => /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    UserName: '',\n    email: '',\n    mobile: '',\n    Password: '',\n    CPassword: ''\n  },\n  onSubmit: value => {\n    console.log(\"The values are\", value);\n  },\n  validationSchema: yup.object({\n    UserName: yup.string().required('Required').min(4, 'Minimum 4 characters required').max(8, 'Maximum limit is 8 characters'),\n    email: yup.string().required('Required').email('Email-id is invalid'),\n    mobile: yup.number().required('Required').matches(phone, 'Phone number is invalid'),\n    Password: yup.string().required('Required').min(4, 'Minimum 4 characters required').max(8, 'Maximum limit is 8 characters'),\n    CPassword: yup.string().required('Required').oneOf([yup.ref('Password'), null], \"Password doesn't match\")\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, ({\n  handleChange,\n  handleSubmit,\n  errors,\n  values\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"contain\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"card-title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }\n}, \"Registeration\"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card-body\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"avatar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  src: avatar,\n  round: true,\n  size: \"90\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }\n}, \"UserName:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  className: errors.UserName ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"UserName\",\n  value: values.UserName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }\n}), errors.UserName ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 31\n  }\n}, \" *\", errors.UserName, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }\n}, \"Email id:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  className: errors.email ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"email\",\n  value: values.email,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }\n}), errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 28\n  }\n}, \" *\", errors.email, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }\n}, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  className: errors.mobile ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"mobile\",\n  value: values.mobile,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }\n}), errors.mobile ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 29\n  }\n}, \" *\", errors.mobile, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }\n}, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  className: errors.Password ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"Password\",\n  value: values.Password,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }\n}), errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 31\n  }\n}, \" *\", errors.Password, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }\n}, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  className: errors.CPassword ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  name: \"CPassword\",\n  value: values.CPassword,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }\n}), errors.CPassword ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  style: {\n    height: '0px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 32\n  }\n}, \" *\", errors.CPassword, \"*\") : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  type: \"submit\",\n  className: \"btn-lg btn-block\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 13\n  }\n}, \"Register\")))))));\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/dines/Desktop/Food Application/application/src/Register.js"],"names":["React","Button","Avatar","avatar","Formik","yup","phone","Login","UserName","email","mobile","Password","CPassword","value","console","log","object","string","required","min","max","number","matches","oneOf","ref","handleChange","handleSubmit","errors","values","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Avatar from 'react-avatar';\r\nimport './Register.css';\r\nimport avatar from './image.png';\r\nimport { Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nconst phone = /\"[7-9]{1}[0-9]{4}[0-9]{5}\"/;\r\nconst Login = () => (\r\n    <Formik\r\n    initialValues={{\r\n        UserName:'',\r\n        email:'',\r\n        mobile:'',\r\n        Password:'',\r\n        CPassword:''\r\n    }}\r\n    onSubmit={(value)=>\r\n    {\r\n        console.log(\"The values are\",value);\r\n    }}\r\n    validationSchema={yup.object(\r\n        {\r\n            UserName:yup.string()\r\n               .required('Required')\r\n               .min(4,'Minimum 4 characters required')\r\n               .max(8,'Maximum limit is 8 characters'),\r\n            email:yup.string()\r\n                .required('Required')\r\n                .email('Email-id is invalid'),\r\n            mobile:yup.number()\r\n                .required('Required') \r\n                .matches(phone,'Phone number is invalid'),  \r\n            Password:yup.string()\r\n               .required('Required')\r\n               .min(4,'Minimum 4 characters required')\r\n               .max(8,'Maximum limit is 8 characters'),\r\n            CPassword:yup.string()\r\n                .required('Required')\r\n                .oneOf([yup.ref('Password'),null],\"Password doesn't match\")   \r\n        }\r\n    )}\r\n    >\r\n    {({handleChange,handleSubmit,errors,values})=> (\r\n        <div className='contain'>\r\n        <div className=\"card\">\r\n        <h5 className=\"card-title\">Registeration</h5>\r\n        <div className=\"card-body\">\r\n        <div className=\"avatar\">\r\n            <Avatar src={avatar} round={true} size=\"90\"/>\r\n            </div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n            <label>UserName:</label>\r\n            <input \r\n            type=\"text\" \r\n            className={errors.UserName ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange} \r\n            name=\"UserName\"\r\n            value={values.UserName}/>\r\n            {errors.UserName ?<div className=\"text-danger\" style={{height:'0px'}}> *{errors.UserName}*</div>:null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>Email id:</label>\r\n            <input \r\n            type=\"text\" \r\n            className={errors.email ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange} \r\n            name=\"email\"\r\n            value={values.email}/>\r\n            {errors.email ?<div className=\"text-danger\" style={{height:'0px'}}> *{errors.email}*</div>:null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>Phone Number:</label>\r\n            <input \r\n            type=\"text\" \r\n            className={errors.mobile ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange} \r\n            name=\"mobile\"\r\n            value={values.mobile}/>\r\n            {errors.mobile ?<div className=\"text-danger\" style={{height:'0px'}}> *{errors.mobile}*</div>:null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>Password:</label>\r\n            <input \r\n            type=\"text\" \r\n            className={errors.Password ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange} \r\n            name=\"Password\"\r\n            value={values.Password}/>\r\n            {errors.Password ?<div className=\"text-danger\" style={{height:'0px'}}> *{errors.Password}*</div>:null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>Confirm Password:</label>\r\n            <input \r\n            type=\"text\" \r\n            className={errors.CPassword ? \"form-control is-invalid\":\"form-control\"}\r\n            onChange={handleChange} \r\n            name=\"CPassword\"\r\n            value={values.CPassword}/>\r\n            {errors.CPassword ?<div className=\"text-danger\" style={{height:'0px'}}> *{errors.CPassword}*</div>:null}\r\n            </div>\r\n            <div className=\"button\">\r\n            <Button type=\"submit\" className=\"btn-lg btn-block\">Register</Button>\r\n            </div>\r\n            </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n    }\r\n </Formik>\r\n);\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}